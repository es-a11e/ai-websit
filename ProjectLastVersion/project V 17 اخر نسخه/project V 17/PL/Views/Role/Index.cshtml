@using PL.ViewModels
@model IEnumerable<RoleViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="bg-warning font-weight-bolder text-center text-dark">All Roles</h1>
<br />
<a asp-action="Create" class="btn btn-dark ml-3 font-italic">Create New Role</a>
<br />
<div class="row justify-content-center align-items-md-center mt-5">
    <form asp-action="Index" class=" row col-8 offset-1">
        <div class="col-8">
            <input type="text" class="form-control" name="name" placeholder="Search By Name" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>
    </form>
</div>
<br />
@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <td>@Html.DisplayNameFor(R => R.Id)</td>
                <td>@Html.DisplayNameFor(R => R.RoleName)</td>
                <td>Detiels</td>
                <td>Edit</td>
                <td>Delete</td>
                <td>Permissions</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var Role in Model)
            {
                <tr>
                    <td>@Role.Id</td>
                    <td>@Role.RoleName</td>
                    <partial name="_ButtonsPartialView" model="@Role.Id.ToString()" />
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-5 alert alert-warning">
        <h3>There Is No Roles</h3>
    </div>
}